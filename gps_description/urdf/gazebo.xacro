<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

  <xacro:property name="body_color" value="Gazebo/Yellow" />
  <xacro:property name="lidar_color" value="Gazebo/DarkGrey" />
  <xacro:property name="wheel_color" value="Gazebo/Silver" />

  <gazebo reference="base_link">
    <material>${body_color}</material>
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <selfCollide>true</selfCollide>
    <gravity>true</gravity>
  </gazebo>

  <gazebo reference="imu_v1_1">
    <material>${lidar_color}</material>
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <selfCollide>true</selfCollide>
  </gazebo>

  <gazebo reference="lidar_v1_1">
    <material>${lidar_color}</material>
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <selfCollide>true</selfCollide>
  </gazebo>

  <gazebo reference="depth_camera_v1_1">
    <material>${lidar_color}</material>
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <selfCollide>true</selfCollide>
  </gazebo>

  <gazebo reference="left_wheel_v3_1">
    <material>${wheel_color}</material>
    <mu1>1000</mu1>
    <mu2>1000</mu2>
    <selfCollide>true</selfCollide>
  </gazebo>

  <gazebo reference="right_wheel_v3_1">
    <material>${wheel_color}</material>
    <mu1>1000</mu1>
    <mu2>1000</mu2>
    <selfCollide>true</selfCollide>
  </gazebo>

  <gazebo>
    <plugin name="diff_drive_control" filename="libgazebo_ros_diff_drive.so">

      <!-- Update rate in Hz -->
      <update_rate>50</update_rate>

      <!-- wheels -->
      <left_joint>Revolute 10</left_joint>
      <right_joint>Revolute 9</right_joint>

      <!-- kinematics -->
      <wheel_separation>0.45</wheel_separation>
      <wheel_diameter>0.15</wheel_diameter>

      <!-- input -->
      <command_topic>cmd_vel</command_topic>

      <!-- output -->
      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <publish_wheel_tf>true</publish_wheel_tf>

      <odometry_topic>odom</odometry_topic>
      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_footprint</robot_base_frame>

    </plugin>
  </gazebo>

  <gazebo reference="imu_v1_1">
    <gravity>true</gravity>
    <sensor name="imu_v1_1" type="imu">
      <always_on>true</always_on>
      <update_rate>30</update_rate>
      <visualize>true</visualize>
      <plugin name="my_imu_plugin" filename="libgazebo_ros_imu_sensor.so">
        <ros>
          <remapping>~/out:=imu</remapping>
        </ros>
        <frame_name>imu_v1_1</frame_name>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo reference="lidar_v1_1">
    <sensor type="ray" name="head_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>30</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>300</samples>
            <resolution>1</resolution>
            <min_angle>-3.14</min_angle>
            <max_angle>3.14</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="my_ray_sensor_plugin" filename="libgazebo_ros_ray_sensor.so">
        <ros>
          <!-- Configure namespace and remap to publish to /ray/pointcloud2 -->
          <remapping>~/out:=scan</remapping>
        </ros>
        <!-- Output as a PointCloud2, see above for other types -->
        <output_type>sensor_msgs/LaserScan</output_type>
        <!-- Clip intensity values so all are above 100, optional -->
        <min_intensity>100.0</min_intensity>
        <!-- Frame id for header of output, defaults to sensor's parent link name -->
        <frame_name>lidar_v1_1</frame_name>
      </plugin>
    </sensor>
  </gazebo>

    <gazebo reference="depth_camera_v1_1">
        <sensor name="gps" type="gps">
          <always_on>true</always_on>
          <update_rate>1</update_rate>
          <pose>0 0 0 0 0 0</pose>
          <gps>
            <position_sensing>
              <horizontal>
                <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>0.01</stddev>
                </noise>
              </horizontal>
              <vertical>
                <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>0.01</stddev>
                </noise>
              </vertical>
            </position_sensing>
          </gps>
          <plugin name="gps_plugin" filename="libgazebo_ros_gps_sensor.so">
            <ros>
              <remapping>~/out:=/gps/fix</remapping>
            </ros>
          </plugin>
        </sensor>
    </gazebo>
    
</robot>
